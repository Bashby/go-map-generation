// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Message
	Move
	Attack
	Build
	Sleep
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ENUM Message types from peer
type Message_Type int32

const (
	Message_NOOP   Message_Type = 0
	Message_MOVE   Message_Type = 1
	Message_ATTACK Message_Type = 2
	Message_BUILD  Message_Type = 3
	Message_SLEEP  Message_Type = 4
)

var Message_Type_name = map[int32]string{
	0: "NOOP",
	1: "MOVE",
	2: "ATTACK",
	3: "BUILD",
	4: "SLEEP",
}
var Message_Type_value = map[string]int32{
	"NOOP":   0,
	"MOVE":   1,
	"ATTACK": 2,
	"BUILD":  3,
	"SLEEP":  4,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Message struct {
	// Message type
	Type Message_Type `protobuf:"varint,1,opt,name=type,enum=protobuf.Message_Type" json:"type,omitempty"`
	// Message payload
	//
	// Types that are valid to be assigned to Payload:
	//	*Message_Move
	//	*Message_Attack
	//	*Message_Build
	//	*Message_Sleep
	Payload isMessage_Payload `protobuf_oneof:"payload"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Move struct {
	Move *Move `protobuf:"bytes,10,opt,name=move,oneof"`
}
type Message_Attack struct {
	Attack *Attack `protobuf:"bytes,11,opt,name=attack,oneof"`
}
type Message_Build struct {
	Build *Build `protobuf:"bytes,12,opt,name=build,oneof"`
}
type Message_Sleep struct {
	Sleep *Sleep `protobuf:"bytes,13,opt,name=sleep,oneof"`
}

func (*Message_Move) isMessage_Payload()   {}
func (*Message_Attack) isMessage_Payload() {}
func (*Message_Build) isMessage_Payload()  {}
func (*Message_Sleep) isMessage_Payload()  {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_NOOP
}

func (m *Message) GetMove() *Move {
	if x, ok := m.GetPayload().(*Message_Move); ok {
		return x.Move
	}
	return nil
}

func (m *Message) GetAttack() *Attack {
	if x, ok := m.GetPayload().(*Message_Attack); ok {
		return x.Attack
	}
	return nil
}

func (m *Message) GetBuild() *Build {
	if x, ok := m.GetPayload().(*Message_Build); ok {
		return x.Build
	}
	return nil
}

func (m *Message) GetSleep() *Sleep {
	if x, ok := m.GetPayload().(*Message_Sleep); ok {
		return x.Sleep
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Move)(nil),
		(*Message_Attack)(nil),
		(*Message_Build)(nil),
		(*Message_Sleep)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Move:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Move); err != nil {
			return err
		}
	case *Message_Attack:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Attack); err != nil {
			return err
		}
	case *Message_Build:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Build); err != nil {
			return err
		}
	case *Message_Sleep:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sleep); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Payload has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 10: // payload.move
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Move)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Move{msg}
		return true, err
	case 11: // payload.attack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Attack)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Attack{msg}
		return true, err
	case 12: // payload.build
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Build)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Build{msg}
		return true, err
	case 13: // payload.sleep
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sleep)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_Sleep{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_Move:
		s := proto.Size(x.Move)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Attack:
		s := proto.Size(x.Attack)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Build:
		s := proto.Size(x.Build)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Sleep:
		s := proto.Size(x.Sleep)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Move struct {
	Direction string `protobuf:"bytes,1,opt,name=direction" json:"direction,omitempty"`
}

func (m *Move) Reset()                    { *m = Move{} }
func (m *Move) String() string            { return proto.CompactTextString(m) }
func (*Move) ProtoMessage()               {}
func (*Move) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Move) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

type Attack struct {
	Target string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *Attack) Reset()                    { *m = Attack{} }
func (m *Attack) String() string            { return proto.CompactTextString(m) }
func (*Attack) ProtoMessage()               {}
func (*Attack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Attack) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type Build struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *Build) Reset()                    { *m = Build{} }
func (m *Build) String() string            { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()               {}
func (*Build) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Build) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Sleep struct {
	Duration string `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
}

func (m *Sleep) Reset()                    { *m = Sleep{} }
func (m *Sleep) String() string            { return proto.CompactTextString(m) }
func (*Sleep) ProtoMessage()               {}
func (*Sleep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Sleep) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "protobuf.Message")
	proto.RegisterType((*Move)(nil), "protobuf.Move")
	proto.RegisterType((*Attack)(nil), "protobuf.Attack")
	proto.RegisterType((*Build)(nil), "protobuf.Build")
	proto.RegisterType((*Sleep)(nil), "protobuf.Sleep")
	proto.RegisterEnum("protobuf.Message_Type", Message_Type_name, Message_Type_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0x5b, 0xfe, 0xdb, 0x42, 0x87, 0x3f, 0xb8, 0x99, 0x03, 0x69, 0xd4, 0x03, 0x59, 0x49,
	0x24, 0x1c, 0x7a, 0xc0, 0xab, 0x17, 0x50, 0x12, 0x8c, 0x20, 0xa4, 0xa0, 0xf7, 0x85, 0xae, 0x84,
	0x08, 0x6e, 0x53, 0xb6, 0x24, 0xfd, 0x3a, 0x7e, 0x52, 0xb3, 0xdb, 0x6a, 0x1b, 0x4f, 0x3b, 0xf3,
	0xde, 0x2f, 0xd9, 0x79, 0x0f, 0x5a, 0x47, 0x71, 0x3a, 0xf1, 0x9d, 0x08, 0xe2, 0x44, 0x2a, 0x89,
	0x0d, 0xf3, 0x6c, 0xd2, 0x77, 0xf6, 0x55, 0x83, 0xfa, 0x3c, 0xf7, 0x70, 0x00, 0x44, 0x65, 0xb1,
	0xf0, 0xed, 0xae, 0xdd, 0x6f, 0x0f, 0x3b, 0xc1, 0x0f, 0x14, 0x14, 0x40, 0xb0, 0xce, 0x62, 0x11,
	0x1a, 0x06, 0x7b, 0x40, 0x8e, 0xf2, 0x2c, 0x7c, 0xe8, 0xda, 0xfd, 0xe6, 0xb0, 0x5d, 0x61, 0xe5,
	0x59, 0x4c, 0xad, 0xd0, 0xb8, 0x38, 0x00, 0x97, 0x2b, 0xc5, 0xb7, 0x1f, 0x7e, 0xd3, 0x70, 0xb4,
	0xe4, 0x46, 0x46, 0x9f, 0x5a, 0x61, 0x41, 0xe0, 0x2d, 0x38, 0x9b, 0x74, 0x7f, 0x88, 0xfc, 0xff,
	0x06, 0xbd, 0x28, 0xd1, 0xb1, 0x96, 0xa7, 0x56, 0x98, 0xfb, 0x1a, 0x3c, 0x1d, 0x84, 0x88, 0xfd,
	0xd6, 0x5f, 0x70, 0xa5, 0x65, 0x0d, 0x1a, 0x9f, 0xdd, 0x03, 0xd1, 0x17, 0x63, 0x03, 0xc8, 0xcb,
	0x62, 0xb1, 0xa4, 0x96, 0x9e, 0xe6, 0x8b, 0xb7, 0x09, 0xb5, 0x11, 0xc0, 0x1d, 0xad, 0xd7, 0xa3,
	0x87, 0x67, 0x5a, 0x43, 0x0f, 0x9c, 0xf1, 0xeb, 0xd3, 0xec, 0x91, 0xfe, 0xd3, 0xe3, 0x6a, 0x36,
	0x99, 0x2c, 0x29, 0x19, 0x7b, 0x50, 0x8f, 0x79, 0x76, 0x90, 0x3c, 0x62, 0x3d, 0x20, 0x3a, 0x16,
	0x5e, 0x83, 0x17, 0xed, 0x13, 0xb1, 0x55, 0x7b, 0xf9, 0x69, 0x5a, 0xf2, 0xc2, 0x52, 0x60, 0x5d,
	0x70, 0xf3, 0x50, 0xd8, 0x01, 0x57, 0xf1, 0x64, 0x27, 0x54, 0x01, 0x15, 0x1b, 0xbb, 0x02, 0xc7,
	0x64, 0x41, 0xac, 0x34, 0xed, 0xe5, 0x8d, 0xb2, 0x1b, 0x70, 0xcc, 0xfd, 0x78, 0x09, 0x8d, 0x28,
	0x4d, 0x78, 0xe5, 0x93, 0xdf, 0x7d, 0xe3, 0x9a, 0xac, 0x77, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x5e, 0x0c, 0xa2, 0x9e, 0xd0, 0x01, 0x00, 0x00,
}
